{"version":3,"sources":["services/departmenthttpservice.js","hooks/codesplitting/SimpleCompoent/operations.js","hooks/simplefunctionalComponent.js","components/StatelessComponent/thirdSimpleComponent.jsx","components/StatelessComponent/firstSimpleComponen.jsx","components/StatefullComponents/messageComponent.jsx","reportWebVitals.js","components/reusablecomponents/dropdowncomponent.jsx","components/BasicCalculator/basicCalculatorComponent.jsx","components/LifecycleeHooks/ConditionalComponents/MouseMoveComponent.jsx","components/productcomponent/productComponent.jsx","components/reusablecomponents/tablecomponent.jsx","components/LifecycleeHooks/ErrorHandlingCompoents/ErrorConditionComponent.jsx","components/LifecycleeHooks/callRESTComponent/departmentRESTComponent.jsx","components/LifecycleeHooks/ErrorHandlingCompoents/ErrorBoundryComponent.jsx","components/validations/ValidationComponent.jsx","services/securecallservice.js","components/LifecycleeHooks/callRESTComponent/secureaccesscomponent.jsx","routingapp/createdepartment.js","routingapp/listdepartment.js","routingapp/updatedepartment.js","routingapp/maincontainercomponent.js","componentfortest/ListOptionsComponent.js","componentfortest/ListNamesComponent.js","index.js","hooks/customhooks/usePromise.js","hooks/customhooks/customHookComponent.js"],"names":["DepartmentHttpService","this","url","axios","get","address","id","dept","post","headers","put","delete","reverse","arr","sort","ExpressionComponentDiagestingDOM","props","val","val1","ExpressionWithDirectPropertisWithoutPropsComponentDiagestingDOM","ExpressionDOMReturningComponent","v1","v2","onClick","alert","SimpleFuncationalComponent","className","msg","ThisrdSimpleComponent","Component","SecondSimpleComponent","MyChildComponent","info","newmsg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DropDownComponent","state","evt","selectedValue","target","value","undefined","dataSource","stateProperty","onChange","handleChange","bind","map","opt","idx","EvenComponent","componentDidMount","console","log","window","addEventListener","getMousePositions","componentDidUpdate","componentWillUnmount","removeEventListener","setState","x","clientX","y","clientY","OddComponent","data","TableComponent","length","Object","keys","col","rows","index","MyCounterComponent","increament","counter","Error","type","e","message","ErrorBoundryComponent","componentDidCatch","error","logInfo","toString","componentStack","errorMessage","children","SecureHttpCallService","user","token","CreateDepartmentComponent","serv","useState","DeptNo","DeptName","Location","Capacity","setDept","name","parseInt","history","push","postData","response","record","catch","ListDepartmentsComponent","departments","updateList","useEffect","getData","to","UpdateDepartmentComponent","match","params","getDataById","MainContainerComponent","exact","path","component","ListOptionsComponent","ListNamesComponent","names","defaultProps","ReactDOM","render","StrictMode","document","getElementById","usePromise","updateDepartment","getDataFromUrl","CustomHookComponet","data1","d","i","JSON","stringify"],"mappings":"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","file":"static/js/main.8502fdde.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass DepartmentHttpService {\n    constructor(){\n        this.url = 'http://localhost:9001/api/departments';\n    }\n\n    getData(){\n        let response = axios.get(this.url);\n        return response;\n    }\n\n    getDataFromUrl(address){\n        let response = axios.get(address);\n        return response;\n    }\n\n\n    getDataById(id){\n        let response = axios.get(`${this.url}/${id}`);\n        return response;\n    }\n    postData(dept){\n        let response = axios.post(this.url,dept, {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        });\n        return response;\n    }\n    putData(id,dept){\n        let response = axios.put(`${this.url}/${id}`,dept, {\n            headers:{\n                'Content-Type':'application/json'\n            }\n        });\n        return response;\n    }\n\n    deleteData(id){\n        let response = axios.delete(`${this.url}/${id}`);\n        return response;\n    }\n}\n\nexport default DepartmentHttpService;","export function reverse(arr){\n    return arr.reverse();\n}\n\nexport function sort(arr){\n    return arr.sort();\n}","import React from 'react';\n\nfunction SimpleFuncationalComponent(props){\n    return(\n        <div className=\"container\">\n            <h2>The Functional Component</h2>\n            <strong>\n                Value Receied from Parent  = {props.msg}\n            </strong>\n            <hr/>\n            <ExpressionComponentDiagestingDOM val={'Mahesh'}\n             val1={props.msg}></ExpressionComponentDiagestingDOM>\n             <hr/>\n             <ExpressionWithDirectPropertisWithoutPropsComponentDiagestingDOM\n              val={'Mahesh'}\n              val1={props.msg}></ExpressionWithDirectPropertisWithoutPropsComponentDiagestingDOM>\n              <hr/>\n              <ExpressionDOMReturningComponent\n              v1={'Mahesh'} v2={'Sabnis'}></ExpressionDOMReturningComponent>\n        </div>\n    );\n}\n\n\n// constant Expression having DOM in it\n// cann be used like a stateless component\nconst ExpressionComponentDiagestingDOM=(props)=>(\n    <div>\n        <h2>constant Expression having DOM in it</h2>\n        <strong>\n            {props.val} && {props.val1}\n        </strong>\n        \n    </div>\n);\n\n// the component that will accept multiple properties\n// seperated by comma instead of using 'props'\n// these parameters will be treated as context values\n// passed by the parent of the current component\nconst ExpressionWithDirectPropertisWithoutPropsComponentDiagestingDOM=({val,val1})=>(\n    <div>\n        <h2>the component that will accept multiple properties seperated by comma instead of using 'props'</h2>\n        <strong>\n            {val} && {val1}\n        </strong>\n         \n    </div>\n);\n\n\n// constant expression that returns DOM like a functional component\n// heavily used syntax for using Function Component with State, Props, Context with hooks for Production\n// the contents of Function component are by default belong to the function itself that's why they can be directly ing to HTML eleemnts for showing data and executed with events of DOM elements \nconst ExpressionDOMReturningComponent=({v1,v2})=>{\n    const clickMe=()=>{\n        alert('Button is Clicked');\n    }\n    return (\n        <div>\n            <h2>The DOM Returing Expression Component</h2>\n            <strong>\n            {v1} && {v2}\n        </strong>\n        <hr/>\n        <button onClick={clickMe}>Click Me</button>\n        </div>\n    );\n};\n\n\n\n\nexport default SimpleFuncationalComponent;\n","import React, {Component} from 'react';\n\nclass ThisrdSimpleComponent extends Component {\n    render(){\n        return(\n            <div>\n                <h2>The Third Simple Stateless Component!!!!!</h2>\n                \n            </div>\n        );\n    }\n}\n\nexport default ThisrdSimpleComponent;","// 1. import React object Model and the Componenr class from the 'react' package\n\nimport React, {Component} from 'react';\n\n// importing compoenent from oter file\nimport ThisrdSimpleComponent from './thirdSimpleComponent';\n\nclass FirstSimpleComponent extends Component {\n    render(){\n        return(\n            <div>\n                <h2>The First Simple Stateless Component!!!!!</h2>\n                <hr/>\n                <SecondSimpleComponent></SecondSimpleComponent>\n                <hr/>\n                <ThisrdSimpleComponent></ThisrdSimpleComponent>\n            </div>\n        );\n    }\n}\n\n\n\nclass SecondSimpleComponent extends Component {\n    render(){\n        return(\n            <div>\n                <h2>The Second Simple Stateless Component!!!!!</h2>\n            </div>\n        );\n    }\n}\n\n\n// export the component so that it can be used in other component file as reusable UI\nexport default FirstSimpleComponent;","import React,{Component} from 'react';\n\nclass MessageComponent extends Component {\n    // the 'props' parameter to the ctor represent that the \n    // current component is subscriben to 'props' when the instance of the current component is created\n    constructor(props){\n        super(props);\n        this.state  ={\n            localMessage: 'The Message in Local State of the Component',\n            myParentMessage:this.props.msg\n        };\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                 <h2>The State Full Component</h2>\n                 <div className=\"form-group\">\n                     <strong>\n                         Value Received from the Parent is = \n                         <hr/>\n                         {this.props.msg}\n                         <hr/>\n                         {this.props.msg1}\n                     </strong>\n                 </div>\n                 <hr/>\n                 {/* Passing the state of the current component ot its child*/}\n                 <MyChildComponent info={this.state.localMessage} newmsg={this.state.myParentMessage}></MyChildComponent>\n            </div>\n        );\n    }\n}\n\nclass MyChildComponent extends Component {\n    render(){\n        return(\n            <div className=\"container\">\n                <h3>The Child Component</h3>\n                <div className=\"container\">\n                    <strong>\n                        Data Received from Message Component is\n                        <hr/>\n                        {this.props.info}\n                        <hr/>\n                        {this.props.newmsg}\n                    </strong>\n                </div>\n            </div> \n        );\n    }\n}\n\n\nexport default MessageComponent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\n\n\nclass DropDownComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    handleChange(evt){\n        // props function object \n        // this is having in input parameter as\n        // selected option value 'evt.target.value'\n        // the parent component will subscribe to this event\n        // using the function from the parent component\n        this.props.selectedValue(evt.target.value);\n    }\n\n\n\n    render() { \n        if(this.props.dataSource === undefined){\n           return( <div className=\"contaier\">\n                No Data to show\n            </div>);\n        } else {\n        return (  \n             <select value={this.props.stateProperty} className=\"form-control\"\n              onChange={this.handleChange.bind(this)}>\n                 {\n                     this.props.dataSource.map((opt,idx)=>(\n                         <option key={idx} value={opt}>{opt}</option>\n                     ))\n                 }\n             </select>\n        );}\n    }\n}\n \nexport default DropDownComponent;","import React, { Component } from 'react';\n\nclass BasicCalculatorComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            num1:0,\n            num2:0,\n            res:0\n        };\n    }\n\n    // handlers for changing the input elements to mutate states\n    // handleNum1Change(evt){\n    //     this.setState({num1:parseInt(evt.target.value)});\n    // }\n    // handleNum2Change(evt){\n    //     this.setState({num2:parseInt(evt.target.value)});\n    // }\n\n    // mutating states for each input elements\n    // using a single Handler\n    handleInputChanges(evt){\n        // [e.target.name] an array of elements having same name as the name of the state property bound to it\n        // the [e.target.name]: e.target.value expression will match the 'name' with 'state' property  and update\n        // the state based on the name of the element on which then change event is raised\n        this.setState({[evt.target.name]: evt.target.value});\n    }\n\n\n\n    clear(){\n        this.setState({num1:0});\n        this.setState({num2:0});\n        this.setState({res:0});\n    }\n\n    add(){\n        let result = parseInt(this.state.num1) + parseInt(this.state.num2);\n        this.setState({res:result});\n    }\n    render() { \n        return ( \n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>Num1</label>\n                    <input type=\"text\" className=\"form-control\"\n                     value={this.state.num1} name=\"num1\" onChange={this.handleInputChanges.bind(this)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Num2</label>\n                    <input type=\"text\" className=\"form-control\"\n                    value={this.state.num2} name=\"num2\" onChange={this.handleInputChanges.bind(this)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Result</label>\n                    <input type=\"text\" className=\"form-control\"\n                    value={this.state.res} readOnly/>\n                </div>\n                <div className=\"form-group\">\n                   <input type=\"buttont\" className=\"btn btn-primary\" value=\"clear\"\n                    onClick={this.clear.bind(this)}/>\n                   <input type=\"buttont\" className=\"btn btn-success\" value=\"add\"\n                     onClick={this.add.bind(this)}/>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default BasicCalculatorComponent;\n","import React, { Component } from 'react'\n\nclass LifecycleComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            value:0\n        };\n        console.log(`COnstructor of the Parent is executed`);\n    }\n    updateValue=(evt)=>{\n        this.setState({value:parseInt(evt.target.value)});\n    }\n    componentDidUpdate=()=>{\n        console.log(`Compoennt did update on Parent Component is invoked`);\n    }\n    render() { \n        console.log(`Rendering of Parent Component`);\n        if(this.state.value % 2 ===0){\n            return(\n                <div className=\"contaier\">\n                    <h1>The Parent Component</h1>\n                    <input type=\"text\" value={this.state.value}\n                     onChange={this.updateValue.bind(this)}/>\n                     <strong>Showing Even Component</strong>\n                     <EvenComponent></EvenComponent>\n                </div>\n            );\n        } else {\n        return (  \n            <div className=\"contaier\">\n                 <div className=\"contaier\">\n                    <h1>The Parent Component</h1>\n                    <input type=\"text\" value={this.state.value}\n                     onChange={this.updateValue.bind(this)}/>\n                      <strong>Showing Odd Component</strong>\n                     <OddComponent data={this.state.value}></OddComponent>\n                </div>\n            </div>\n        );\n     }\n    }\n}\n\n\nclass EvenComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            x:0,\n            y:0\n        };\n\n        console.log(`Even Component Constructor called`);\n\n        // subscribing the event for global object (window) object\n        // ins constructor\n        // this will generate runtime Warnings for BUGS because the\n        // constrctorm only executes the COmponent intialization bu the\n        // component mounting(?) is still  not completed \n       // window.addEventListener('mousemove', this.getMousePositions);\n    }\n\n    componentDidMount=()=>{\n        console.log(`Even Component Did Mount`);\n        window.addEventListener('mousemove', this.getMousePositions);\n    }\n\n    // will be invoked for each state / props changes\n    componentDidUpdate=()=>{\n       console.log(`Even Component Did Update is invoked`);\n    }\n\n    componentWillUnmount=()=>{\n        console.log(`Even Component is unmounted`);\n        // release all event handlers\n        window.removeEventListener('mousemove', this.getMousePositions);\n    }\n    getMousePositions=(evt)=>{\n        this.setState({x:evt.clientX});\n        this.setState({y:evt.clientY});\n        console.log(`Mouse Move x=${this.state.x} && y=${this.state.y}`);\n    }\n\n    render(){\n        console.log(`Rendering of Even Component`);\n       return( <div className=\"container\">\n            <strong>\n                x = {this.state.x} and y = {this.state.y}\n            </strong>\n        </div>); \n    }\n}\n\nclass OddComponent extends Component {\n    constructor(props){\n        super(props);\n        console.log(`COnstructor of Odd COmponent is invoked`);\n    }\n    // will be invoked for each state / props changes\n    componentDidUpdate=()=>{\n        console.log(`Odd Component Did Update is invoked`);\n     }\n\n     componentDidMount=()=>{\n        console.log(`Odd Component Did Mount`);\n        \n    }\n\n     componentWillUnmount=()=>{\n        console.log(`Odd Component is unmounted`);\n    }\n    render(){\n        console.log(`Render of Odd Component in Invoked`);\n        return (\n            <div className=\"container\">\n                <strong>\n                    Value Received from Parent = {this.props.data}\n                </strong>\n            </div>\n        );\n    }\n}\n \nexport default LifecycleComponent;","import React, { Component } from 'react'\nimport DropDownComponent from './../reusablecomponents/dropdowncomponent';\nclass ProductComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            ProductId:'',\n            ProductName:'',\n            CategoryName:'',\n            Manufacturer:'',\n            BasePrice:0,\n            Categories: undefined,\n            Manufacturers: [\"TATA\",\"BAJAJ\",\"HP\"]\n         };\n    }\n\n    handleChange(evt){\n        // the callback is used because that state is mutated using the <select><option> change evebt\n        // this is multi-Step event. The <option> will change then the selected option's valie will \n        // be passed to value of the <select> element. This will delayed the setState and hence the state\n        // property mutation, hence we need callnack as second parameter \n        this.setState({[evt.target.name]:evt.target.value},()=>{\n            console.log(`Category Name ${this.state.CategoryName}`);\n            console.log(`Manufacturer Name ${this.state.Manufacturer}`);\n        });\n    }\n\n    getSelectedCategory(val){\n        this.setState({CategoryName:val},()=>{});\n    }\n    getSelectedManufacturer(val){\n        this.setState({Manufacturer:val},()=>{});\n    }\n\n    render() { \n        return (  \n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>Categories</label>\n                    {/* Generating theSelect options based on state*/}\n                   {/* <select className=\"form-Control\" name=\"CategoryName\" value={this.state.CategoryName}\n                     onChange={this.handleChange.bind(this)}>\n                        {\n                             this.state.Categories.map((cat,idx)=>(\n                                 <option key={idx} value={cat}>{cat}</option>\n                             ))   \n                        }\n                    </select> */}\n                </div>\n                <div className=\"form-group\">\n                    <label>Manufacturer</label>\n                    <select className=\"form-Control\" name=\"Manufacturer\" value={this.state.Manufacturer}\n                     onChange={this.handleChange.bind(this)}>\n                    {\n                             this.state.Manufacturers.map((man,idx)=>(\n                                 <option key={idx} value={man}>{man}</option>\n                             ))   \n                        }\n                    </select>\n                </div>\n                <hr/>\n                <div className=\"container\">\n                    <label>Reusable Categories</label>\n                    {/* stateProperty: is the 'state' property of the parent component passed to child component. So that the selected value from child component will update the state property i.e. CategoryName \n                     dataSource: the property of child component thatb will accept value from state property of the component using which the <options> will be generated in DropDownComponent\n                    */}\n                    <DropDownComponent\n                     stateProperty={this.state.CategoryName}\n                     dataSource={this.state.Categories}\n                     selectedValue ={this.getSelectedCategory.bind(this)}\n                    ></DropDownComponent>        \n                    <br/>\n                    selected Category {this.state.CategoryName}\n\n                </div>\n                <hr/>\n                <div className=\"container\">\n                    <label>Reusable Categories</label>\n                    <DropDownComponent\n                     stateProperty={this.state.Manufacturer}\n                     dataSource={this.state.Manufacturers}\n                     selectedValue ={this.getSelectedManufacturer.bind(this)}\n                    ></DropDownComponent>       \n                    <br/>\n                    selected Manufacturer {this.state.Manufacturer}\n \n                </div>\n            </div>\n        );\n    }\n}\n \nexport default ProductComponent;","import React, { Component } from 'react'\n\nclass TableComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n    render() { \n        if(this.props.dataSource === undefined || this.props.dataSource.length === 0){\n            return (\n                <div className=\"container\">No Recrds to show</div>\n            );\n        } else {\n        return (  \n            <div className=\"container\">\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            {\n                                Object.keys(this.props.dataSource[0]).map((col,idx)=>(\n                                    <th key={idx}>{col}</th>\n                                ))\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                         {\n                             this.props.dataSource.map((rows,index)=>(\n                                <tr key={index}>\n                                    {\n                                      Object.keys(this.props.dataSource[0]).map((col,idx)=>(\n                                        <th key={idx}>{rows[col]}</th>\n                                    ))  \n                                    }\n                                </tr>\n                             ))\n                         }       \n                    </tbody>\n                </table>\n            </div>\n           \n          );\n       }\n    }\n}\n \nexport default TableComponent;","import React, { Component } from 'react';\n\nclass MyCounterComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            counter:0\n        };\n    }\n    increament=()=>{\n        this.setState({counter: this.state.counter +1});\n       \n    }\n    render() { \n        try {\n            if(this.state.counter > 10) {\n                throw new Error('Counter Has Exceeds its limit');\n            } else{\n                return (  \n                    <div className=\"container\">\n                        <strong>\n                            The Counter Value = {this.state.counter}\n                        </strong>\n                        <br/>\n                        <input type=\"button\" value=\"Increaent\"\n                         onClick={this.increament.bind(this)}/>\n                    </div>\n                );\n            }\n        }catch(e) {\n            return(\n                <div className=\"container\">\n                <strong>\n                   Error Occured = {e.message}\n                </strong>\n            </div>\n            );\n        }\n        \n       \n    }\n}\n\nclass ContainerComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    reload=()=>{\n        // reload or refresh the same page\n        window.history.go(0);\n    }\n    render() { \n        return (  \n            <div className=\"container\">\n                <MyCounterComponent></MyCounterComponent>\n                <hr/>\n                <input type=\"button\" value=\"Reload\"\n                 onClick={this.reload.bind(this)}/>\n            </div>\n        );\n    }\n}\n \nexport default ContainerComponent;\n \n\n","import React, { Component } from 'react'\nimport TableComponent from './../../reusablecomponents/tablecomponent';\nimport DepartmentHttpService from './../../../services/departmenthttpservice';\nclass DepartmentRESTComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            DeptNo:0,\n            DeptName:'',\n            Location: '',\n            Capacity:0,\n            Departments:[],\n            message:''\n        };\n\n        // define instances of external calls after all state properties are initialized\n        this.serv = new DepartmentHttpService();\n    }\n\n    handleChange=(evt)=>{\n        this.setState({[evt.target.name]:evt.target.value});\n    }\n    clear=()=>{\n        this.setState({DeptNo:0});\n        this.setState({DeptName:''});\n        this.setState({Location:''});\n        this.setState({Capacity:0});\n    }\n\n    componentDidMount=()=>{\n        this.serv.getData().then((response)=>{\n            // mutate the state\n            this.setState({Departments:response.data.rows},()=>{\n                this.setState({message:`Data is Loaded Successfully `});\n            });\n        }).catch((error)=>{\n            this.setState({message:`Error Occured in loading Data ${error}`});\n        });\n    }\n\n    save=()=>{\n        let dept = {\n            DeptNo:this.state.DeptNo,\n            DeptName:this.state.DeptName,\n            Location:this.state.Location,\n            Capacity:this.state.Capacity\n        };\n        this.serv.postData(dept).then((response)=>{\n            this.setState({message:`Department is posted successfully`});\n        }).catch((error)=>{\n            this.setState({message:`Error Occured in loading Data ${error}`});\n        });\n    }\n\n    render() { \n        return (  \n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <label>DeptNo</label>\n                    <input type=\"text\" name=\"DeptNo\" value={this.state.DeptNo} onChange={this.handleChange.bind(this)}  className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label>DeptNmae</label>\n                    <input type=\"text\" name=\"DeptName\" value={this.state.DeptName} onChange={this.handleChange.bind(this)}  className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Location</label>\n                    <input type=\"text\" name=\"Location\" value={this.state.Location} onChange={this.handleChange.bind(this)}  className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label>Capacity</label>\n                    <input type=\"text\" name=\"Capacity\" value={this.state.Capacity} onChange={this.handleChange.bind(this)}  className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"button\" value=\"Clear\" className=\"btn btn-primary\"\n                     onClick={this.clear.bind(this)}/>\n                    <input type=\"button\" value=\"Save\" className=\"btn btn-success\"\n                     onClick={this.save.bind(this)}/>\n                </div>\n                <br/>\n                    {this.state.message}\n                <hr/>\n                <h4>List of Departments</h4>\n                {/* {\n                    JSON.stringify(this.state.Departments)\n                } */}\n                <TableComponent dataSource={this.state.Departments}></TableComponent>\n            </div>\n        );\n    }\n}\n \nexport default DepartmentRESTComponent;","import React, { Component } from 'react';\n\nclass ErrorBoundryComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            errorMessage:''\n        };\n    }\n\n    // this property will be invoked by rendering thread of the component\n    // to notify the exception thrown by any child component\n    // this property will implicitely set the state of the errorMessage of the current component\n    static getDerivedStateFromError(error){\n        return {\n            errorMessage:error.toString()\n        }\n    }\n\n\n    // parameter 1: Error That will be listened by this Component\n    // parameter 2: the Error Log that will have an access to stack trace for the component that has thrown error\n    // parameter 2 is of the type Exception that has property 'componentStack' which is a stach trace   \n    componentDidCatch=(error, logInfo)=>{\n        console.log(error.toString(), logInfo.componentStack);\n    }\n    // render the fallback UI \n    render(){\n        if(this.state.errorMessage){\n            // return the fallback UI\n            return(\n                <div className=\"container\">\n                     <h3>Some Error is Opccured</h3>\n                     <strong>\n                         {\n                             this.state.errorMessage\n                         }\n                     </strong>\n                </div>\n            );\n        }\n        // oterwise keep rendering children components\n        return this.props.children;\n    }\n}\n\n\nclass MyCounterComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            counter:0\n        };\n    }\n    increament=()=>{\n        this.setState({counter: this.state.counter +1});\n       \n    }\n    render() { \n      \n            if(this.state.counter > 10) {\n                throw new Error('Counter Has Exceeds its limit');\n            } else{\n                return (  \n                    <div className=\"container\">\n                        <strong>\n                            The Counter Value = {this.state.counter}\n                        </strong>\n                        <br/>\n                        <input type=\"button\" value=\"Increaent\"\n                         onClick={this.increament.bind(this)}/>\n                    </div>\n                );\n            }\n    }\n}\n\nclass ContainerForErrorBoundryComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    reload=()=>{\n        // reload or refresh the same page\n        window.history.go(0);\n    }\n    render() { \n        return (  \n            <div className=\"container\">\n                {/* Render all children components inside the context of Error Boundry Component */}\n                <ErrorBoundryComponent>\n                     <MyCounterComponent></MyCounterComponent>\n                </ErrorBoundryComponent>\n                <hr/>\n                <input type=\"button\" value=\"Reload\"\n                 onClick={this.reload.bind(this)}/>\n            </div>\n        );\n    }\n}\n \nexport default ContainerForErrorBoundryComponent;\n \n\n","import React, { Component } from 'react'\n\n\nclass ValidationFormComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  \n            DeptNo:0,\n            DeptName:'',\n            isDeptNoValid:true,\n            isDeptNameValid:true,\n            isFormValid:false\n        };\n\n    }\n\n    handleChange=(evt)=>{\n        this.setState({[evt.target.name]:evt.target.value});\n        this.validateForm(evt.target.name,evt.target.value);\n    }\n\n    validateForm=(name,value)=>{\n        if(name === \"DeptNo\"){\n            if(parseInt(value) < 0 || value.length > 5){\n                this.setState({isDeptNoValid:false});\n                this.setState({isFormValid:false});\n            } else {\n                this.setState({isDeptNoValid:true});\n                this.setState({isFormValid:true});\n            }\n        }\n        if(name === \"DeptName\"){\n            if(value.length ===0 || value.length > 20){\n                this.setState({isDeptNameValid:false});\n                this.setState({isFormValid:false});\n            }else {\n                this.setState({isDeptNameValid:true});\n                this.setState({isFormValid:true});\n            }\n        }\n    }\n\n    save=()=>{\n        // \n        \n    }\n    render() { \n        return (  \n            <div className=\"container\">\n             <form onSubmit={this.save.bind(this)}>    \n                <div className=\"form-group\">\n                    <label>DeptNo</label>\n                    <input type=\"text\" name=\"DeptNo\" value={this.state.DeptNo} onChange={this.handleChange.bind(this)}  className=\"form-control\"\n                     />\n                     <div className=\"alet alert-danger\"\n                      hidden={this.state.isDeptNoValid}>\n                         DeptNo is invalid\n                     </div>\n                </div>\n                <div className=\"form-group\">\n                    <label>DeptNmae</label>\n                    <input type=\"text\" name=\"DeptName\" value={this.state.DeptName} onChange={this.handleChange.bind(this)}  className=\"form-control\"\n                     />\n                      <div className=\"alet alert-danger\"\n                      hidden={this.state.isDeptNameValid}>\n                         DeptName is invalid\n                     </div>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Submit\" disabled={!this.state.isFormValid}/>\n                </div>\n            </form>\n           </div> \n        );\n    }\n}\n \nexport default ValidationFormComponent;","import axios from 'axios';\n\nexport class SecureHttpCallService {\n    constructor(){\n        this.url = \"http://localhost:9002\";\n    }\n\n    registerUser(user){\n        let response = axios.post(`${this.url}/api/app/register`, user,{\n            headers:{\n                'Content-Type':'application/json'\n            }\n        });\n        return response;\n    }\n    authUser(user){\n        let response = axios.post(`${this.url}/api/app/auth`, user,{\n            headers:{\n                'Content-Type':'application/json'\n            }\n        });\n        return response;\n    }\n    getData(token){\n        let response = axios.get(`${this.url}/api/app/get`, {\n            headers:{\n                'AUTHORIZATION': `bearer ${token}`\n            }\n        });\n        return response;\n    }\n}","import React, { Component } from 'react';\nimport { SecureHttpCallService } from \"./../../../services/securecallservice\";\nimport TableComponent from './../../reusablecomponents/tablecomponent';\nclass SecureAccessComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            departments:[],\n            message:''\n         };\n         this.serv  =new SecureHttpCallService();\n    }\n\n    createNewUser=()=>{\n        const user ={\n            Id:1,\n            UserName: 'mahesh',\n            Password: 'mahesh',\n            Email:'mahesh@msit.com'\n        };\n        this.serv.registerUser(user).then((response)=>{\n            this.setState({message: response.data.message});\n        }).catch((error)=>{\n            this.setState({message: `Error Occured ${error}`});\n        });\n    };\n\n    authenticateUser=()=>{\n        const user ={\n            UserName: 'mahesh',\n            Password: 'mahesh',\n        };\n        this.serv.authUser(user).then((response)=>{\n            this.setState({message: response.data.response});\n            // save the token is sessionStorage\n            sessionStorage.setItem(\"token\", response.data.token);\n        }).catch((error)=>{\n            this.setState({message: `Error Occured ${error}`});\n        });\n    };\n\n    getData=()=>{\n        let token = sessionStorage.getItem('token');\n        this.serv.getData(token).then((response)=>{\n            this.setState({departments:response.data.response});\n            this.setState({message: 'Data Received Successfully'});\n        }).catch((error)=>{\n            this.setState({message: `Error Occured ${error}`});\n        });\n    };\n\n    render() { \n        return ( \n            <div className=\"container\">\n                <input type=\"button\" value=\"Create User\" className=\"btn btn-primary\" onClick={this.createNewUser.bind(this)}/>\n                <hr/>\n                <input type=\"button\" value=\"Auth User\" className=\"btn btn-success\"\n                onClick={this.authenticateUser.bind(this)}/>\n                <hr/>\n                <input type=\"button\" value=\"Get Data\" className=\"btn btn-warning\"\n                 onClick={this.getData.bind(this)}/>\n                <br/>\n                <strong>\n                    {this.state.message}\n                </strong>\n                <hr/>\n                <TableComponent dataSource={this.state.departments}></TableComponent>\n            </div>\n         );\n    }\n}\n \nexport default SecureAccessComponent;\n\n","import React,{useState} from 'react';\nimport DepartmentHttpService from './../services/departmenthttpservice';\nconst CreateDepartmentComponent=(props)=>{\n    const serv = new DepartmentHttpService();\n    const [dept, setDept] = useState({DeptNo:0,DeptName:'',Location:'',Capacity:0});\n\n    const clear=()=>{\n        setDept({DeptNo:0,DeptName:'',Location:'',Capacity:0});\n        props.history.push(\"/\");\n    };\n\n    const save=()=>{\n         serv.postData(dept)\n         .then((response)=>{\n            setDept(response.data.record);\n            // navigate to the ListDepartments component\n            props.history.push(\"/\");\n        }).catch((error)=>{\n            console.log(`Eror ocured ${error}`);\n        });\n    };\n  return(\n    <div className=\"container\">\n    <div className=\"form-group\">\n        <label>DeptNo</label>\n        <input type=\"text\" name=\"DeptNo\" value={dept.DeptNo} onChange={(evt)=> setDept({...dept, DeptNo:parseInt(evt.target.value)})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>DeptNmae</label>\n        <input type=\"text\" name=\"DeptName\" value={dept.DeptName} onChange={(evt)=> setDept({...dept, DeptName:evt.target.value})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>Location</label>\n        <input type=\"text\" name=\"Location\" value={dept.Location} onChange={(evt)=> setDept({...dept, Location:evt.target.value})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>Capacity</label>\n        <input type=\"text\" name=\"Capacity\" value={dept.Capacity} onChange={\n            (evt)=> setDept({...dept, Capacity:parseInt(evt.target.value)})\n        }  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <input type=\"button\" value=\"Clear\" className=\"btn btn-primary\"\n         onClick={clear}/>\n        <input type=\"button\" value=\"Save\" className=\"btn btn-success\"\n         onClick={save}/>\n    </div>\n</div>\n  );\n};\n\nexport default CreateDepartmentComponent;\n","import React, {useState,useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport DepartmentHttpService from './../services/departmenthttpservice';\nconst ListDepartmentsComponent=()=>{\n    const serv = new DepartmentHttpService();\n    const [departments, updateList] = useState([]);\n    useEffect(()=>{\n        serv.getData()\n            .then((response)=>{\n                updateList(response.data.rows);\n            }).catch((error)=>{\n                console.log(`Eror ocured ${error}`);\n            });\n        return()=>{\n            console.log(`List Departments Component is UnMounted`);\n        }    \n    },[]);\n    if(departments=== undefined || departments.length === 0){\n        return (\n            <div className=\"container\">No records</div>\n        );\n    }\n    return (\n        <div className=\"container\">\n        <table className=\"table table-bordered table-striped\">\n            <thead>\n                <tr>\n                    {\n                        Object.keys(departments[0]).map((col,idx)=>(\n                            <th key={idx}>{col}</th>\n                           \n                        ))\n                       \n                    }\n                     <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                 {\n                     departments.map((rows,index)=>(\n                        <tr key={index}>\n                            {\n                              Object.keys(departments[0]).map((col,idx)=>(\n                                <td key={idx}>{rows[col]}</td>\n                               \n                            ))  \n                                 \n                            }\n\n                            <td>\n                                <button className=\"btn btn-warning\">\n                                     <Link to={`update/${rows.DeptNo}`}>Edit</Link>\n                                </button>   \n                            </td>  \n                        </tr>\n\n                     ))\n                 }       \n            </tbody>\n        </table>\n    </div>\n    );\n};\n\nexport default ListDepartmentsComponent;\n","import React,{useState,useEffect} from 'react';\nimport DepartmentHttpService from '../services/departmenthttpservice';\nconst UpdateDepartmentComponent=(props)=>{\n    const serv = new DepartmentHttpService();\n    const [dept, setDept] = useState({DeptNo:0,DeptName:'',Location:'',Capacity:0});\n\n    const clear=()=>{\n        setDept({DeptNo:0,DeptName:'',Location:'',Capacity:0});\n    };\n\n    useEffect(()=>{\n        // read the Route Parameters using the 'match.params' proeprty \n        // provided by Route. the 'id' is name of the actual route expression \n        // parameter\n        let id=props.match.params.id;\n        serv.getDataById(id)\n            .then((response)=>{\n                setDept(response.data.rows);\n            }).catch((error)=>{\n                console.log(error);\n            });\n    },[])\n\n\n    const save=()=>{\n         // call for Update\n    };\n  return(\n    <div className=\"container\">\n    <div className=\"form-group\">\n        <label>DeptNo</label>\n        <input type=\"text\" name=\"DeptNo\" value={dept.DeptNo} onChange={(evt)=> setDept({...dept, DeptNo:parseInt(evt.target.value)})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>DeptNmae</label>\n        <input type=\"text\" name=\"DeptName\" value={dept.DeptName} onChange={(evt)=> setDept({...dept, DeptName:evt.target.value})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>Location</label>\n        <input type=\"text\" name=\"Location\" value={dept.Location} onChange={(evt)=> setDept({...dept, Location:evt.target.value})}  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <label>Capacity</label>\n        <input type=\"text\" name=\"Capacity\" value={dept.Capacity} onChange={\n            (evt)=> setDept({...dept, Capacity:parseInt(evt.target.value)})\n        }  className=\"form-control\"/>\n    </div>\n    <div className=\"form-group\">\n        <input type=\"button\" value=\"Clear\" className=\"btn btn-primary\"\n         onClick={clear}/>\n        <input type=\"button\" value=\"Save\" className=\"btn btn-success\"\n         onClick={save}/>\n    </div>\n</div>\n  );\n};\n\nexport default UpdateDepartmentComponent;\n","import React from 'react';\nimport {Route, Link,Redirect, Switch} from 'react-router-dom';\nimport CreateDepartmentComponent from './createdepartment';\nimport ListDepartmentsComponent from './listdepartment';\nimport UpdateDepartmentComponent from './updatedepartment';\nconst MainContainerComponent=()=>{\n    return (\n    <div className=\"container\">\n\n    <h1>The Single Page App</h1>\n    <table className=\"table table-bordered table-striped\">\n        <tbody>\n            <tr>\n                <td>\n                    <Link to=\"/\">List Departments</Link>\n                </td>\n                <td>\n                    <Link to=\"/create\">Create Department</Link>\n                </td>\n            </tr>\n        </tbody>\n    </table>    \n\n\n    {/* Defining Route Links in Route Table */}\n      <Switch>\n        <Route exact path=\"/\" component={ListDepartmentsComponent}></Route>\n        <Route exact path=\"/create\" component={CreateDepartmentComponent}></Route>\n        <Route exact path=\"/update/:id\" component={UpdateDepartmentComponent}></Route>\n        <Redirect to=\"/\"></Redirect>\n      </Switch>      \n    </div>);\n};\n\nexport default MainContainerComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ListOptionsComponent(props){\n    const {value} = props; // the fix name for props type\n    return <li className={value}>{value}</li>;\n};\n\n// define a DataType Constraints for props \n\nListOptionsComponent.propTypes = {\n    value: PropTypes.string\n};\n\nexport default ListOptionsComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListOptionsComponent from './ListOptionsComponent';\nfunction ListNamesComponent(props){\n    const {names} = props;\n    if(!names.length){\n        return <span className=\"empty\">\n            No Names to display in List\n        </span>\n    }\n    return (\n        <ol className=\"names\">\n            {\n                names.map((name)=>(\n                    <ListOptionsComponent key={name} value={name}></ListOptionsComponent>\n                ))\n            }\n        </ol>\n    );\n};\n\n\n// data type constrains for the names props with its default value\n\nListNamesComponent.propTypes = {\n    names: PropTypes.array\n};\n\n// default value\nListNamesComponent.defaultProps = {\n    names: [\n        \"Jack Reacher\",\n        \"James Bond\",\n        \"Indiana Jones\",\n        \"Ethan Hunt\",\n        \"Jason Bourn\"\n    ]\n};\n\n\nexport default ListNamesComponent;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nimport './index.css';\n// imporing bootstrap CSS Library\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import App from './App';\nimport FirstSimpleComponent from './components/StatelessComponent/firstSimpleComponen';\n\nimport MessageComponent from './components/StatefullComponents/messageComponent';\nimport reportWebVitals from './reportWebVitals';\nimport BasicCalculatorComponent from './components/BasicCalculator/basicCalculatorComponent';\nimport ProductComponent from './components/productcomponent/productComponent';\nimport LifecycleComponent from './components/LifecycleeHooks/ConditionalComponents/MouseMoveComponent';\nimport DepartmentRESTComponent from './components/LifecycleeHooks/callRESTComponent/departmentRESTComponent';\nimport ContainerComponent from './components/LifecycleeHooks/ErrorHandlingCompoents/ErrorConditionComponent';\nimport ContainerForErrorBoundryComponent from './components/LifecycleeHooks/ErrorHandlingCompoents/ErrorBoundryComponent';\nimport ValidationFormComponent from './components/validations/ValidationComponent';\nimport SecureAccessComponent from './components/LifecycleeHooks/callRESTComponent/secureaccesscomponent';\nimport SimpleFuncationalComponent from './hooks/simplefunctionalComponent';\nimport SimpleCalculatorComponent from './hooks/statehook/simplecalculator';\nimport DepartmentHookComponent from './hooks/statehook/departmentHookComponent';\nimport ToggleCompoent from './hooks/useEffectApp/TooggleComponent';\nimport LazyComponent from './hooks/lazyload';\nimport CustomHookComponet from './hooks/customhooks/customHookComponent';\nimport ImportingComponent from './hooks/codesplitting/SimpleCompoent/importingComponent';\nimport LazyLoadingComponent from './hooks/codesplitting/UsingComponents/LazyLoadingComponent';\nimport MainContainerComponent from './routingapp/maincontainercomponent';\nimport HelloTestComponent from './componentfortest/HelloTestComponent';\nimport EventComponent from './componentfortest/EventComponent';\nimport ListNamesComponent from './componentfortest/ListNamesComponent';\nlet message = 'This is the Message from the Parent';\n\nlet newmessage = 'This is the New Message from the Parent';\n\n// the render() method of the ReactDOM will mount the component\n// in HTML element with id as 'root'\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <MainContainerComponent></MainContainerComponent>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React,{useEffect,useState} from 'react';\nimport DepartmentHttpService from './../../services/departmenthttpservice';\nexport const usePromise = (url)=>{\n    const serv = new DepartmentHttpService();\n    const [departments,updateDepartment] = useState([]);\n    useEffect(()=>{\n        serv.getDataFromUrl(url)\n            .then((response)=>{\n                updateDepartment(response.data);\n            })\n            .catch((error)=>{\n                console.log(`Error Ocured ${error}`);\n            });\n    },[]);\n    return departments;\n};","import React from 'react';\nimport {usePromise} from './usePromise';\n\nconst CustomHookComponet=()=>{\n    const data = usePromise('http://localhost:9001/api/departments');\n    const data1 = usePromise('https://apiapptrainingnewapp.azurewebsites.net/api/products');\n    if(data1 === undefined) {\n        return(\n            <div>Noe Record Received.....</div>\n        );\n    }\n    return(\n        <div>\n            <h2>Received data</h2>\n            <ul>\n                {\n                    data1.map((d,i)=>(\n                        <li key={i}>\n                            {JSON.stringify(d)}\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n\n    );\n};\n\nexport default CustomHookComponet;"],"sourceRoot":""}